-- ALTER TABLE ... RENAME on corrupted relations
SET allow_system_table_mods = dml;
SET gp_allow_rename_relation_without_lock = ON;
-- missing entry
CREATE TABLE cor (a int, b float);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
INSERT INTO cor SELECT i, i+1 FROM generate_series(1,100)i;
DELETE FROM pg_attribute WHERE attname='a' AND attrelid='cor'::regclass;
INFO:  GPORCA failed to produce a plan, falling back to planner
ALTER TABLE cor RENAME TO oldcor;
INSERT INTO pg_attribute SELECT distinct * FROM gp_dist_random('pg_attribute') WHERE attname='a' AND attrelid='oldcor'::regclass;
INFO:  GPORCA failed to produce a plan, falling back to planner
DROP TABLE oldcor;
-- typname is out of sync
CREATE TABLE cor (a int, b float, c text);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
UPDATE pg_type SET typname='newcor' WHERE typrelid='cor'::regclass;
INFO:  GPORCA failed to produce a plan, falling back to planner
ALTER TABLE cor RENAME TO newcor2;
ALTER TABLE newcor2 RENAME TO cor;
DROP TABLE cor;
-- relname is out of sync
CREATE TABLE cor (a int, b int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
UPDATE pg_class SET relname='othercor' WHERE relname='cor';
INFO:  GPORCA failed to produce a plan, falling back to planner
ALTER TABLE othercor RENAME TO tmpcor;
ALTER TABLE tmpcor RENAME TO cor;
DROP TABLE cor;
RESET allow_system_table_mods;
RESET gp_allow_rename_relation_without_lock;
-- MPP-20466 Dis-allow duplicate constraint names for same table
create table dupconstr (
						i int,
						j int constraint test CHECK (j > 10))
						distributed by (i);
-- should fail because of duplicate constraint name
alter table dupconstr add constraint test unique (i);
NOTICE:  ALTER TABLE / ADD UNIQUE will create implicit index "dupconstr_i_key" for table "dupconstr"
ERROR:  constraint "test" for relation "dupconstr" already exists
alter table dupconstr add constraint test primary key (i);
NOTICE:  ALTER TABLE / ADD PRIMARY KEY will create implicit index "dupconstr_pkey" for table "dupconstr"
ERROR:  constraint "test" for relation "dupconstr" already exists
-- cleanup
drop table dupconstr;
--
-- Test ALTER COLUMN TYPE after dropped column with text datatype (see MPP-19146)
--
create domain mytype as text;
create temp table at_foo (f1 text, f2 mytype, f3 text);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into at_foo values('aa','bb','cc');
drop domain mytype cascade;
NOTICE:  drop cascades to table at_foo column f2
alter table at_foo alter f1 TYPE varchar(10);
drop table at_foo;
create domain mytype as int;
create temp table at_foo (f1 text, f2 mytype, f3 text);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'f1' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
insert into at_foo values('aa',0,'cc');
drop domain mytype cascade;
NOTICE:  drop cascades to table at_foo column f2
alter table at_foo alter f1 TYPE varchar(10);
-- Verify that INSERT, UPDATE and DELETE work after dropping a column and
-- adding a constraint. There was a bug on that in ORCA, once upon a time
-- (MPP-20207)
CREATE TABLE altable(a int, b text, c int);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
ALTER TABLE altable DROP COLUMN b;
ALTER TABLE altable ADD CONSTRAINT c_check CHECK (c > 0);
INSERT INTO altable(a, c) VALUES(0, -10);
ERROR:  new row for relation "altable" violates check constraint "c_check"  (seg0 192.168.68.1:25432 pid=4839)
SELECT * FROM altable ORDER BY 1;
 a | c 
---+---
(0 rows)

INSERT INTO altable(a, c) VALUES(0, 10);
SELECT * FROM altable ORDER BY 1;
 a | c  
---+----
 0 | 10
(1 row)

DELETE FROM altable WHERE c = -10;
SELECT * FROM altable ORDER BY 1;
 a | c  
---+----
 0 | 10
(1 row)

DELETE FROM altable WHERE c = 10;
SELECT * FROM altable ORDER BY 1;
 a | c 
---+---
(0 rows)

DELETE FROM altable WHERE c = 10;
SELECT * FROM altable ORDER BY 1;
 a | c 
---+---
(0 rows)

INSERT INTO altable(a, c) VALUES(0, 10);
SELECT * FROM altable ORDER BY 1;
 a | c  
---+----
 0 | 10
(1 row)

UPDATE altable SET c = -10;
ERROR:  new row for relation "altable" violates check constraint "c_check"  (seg0 192.168.68.1:25432 pid=4839)
SELECT * FROM altable ORDER BY 1;
 a | c  
---+----
 0 | 10
(1 row)

UPDATE altable SET c = 1;
SELECT * FROM altable ORDER BY 1;
 a | c 
---+---
 0 | 1
(1 row)

-- Verify that changing the datatype of a funnily-named column works.
-- (There used to be a quoting bug in the internal query this issues.)
create table "foo'bar" (id int4, t text);
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'id' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
alter table "foo'bar" alter column t type integer using length(t);
