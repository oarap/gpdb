create or replace function junkloop(rel text, numiter int) returns int as $$
declare
  sql text;
begin
  for i in 0..numiter loop
    sql := $sql$ insert into $sql$ || rel || $sql$ select 1, $sql$ || i::text || $sql$, repeat('x', 1000) $sql$;
    execute sql;
  end loop;
  return numiter;
end;
$$ language plpgsql;
drop table if exists vfao;
NOTICE:  table "vfao" does not exist, skipping
create table vfao (a, b, c) with (appendonly=true, orientation=column) as
select 1, i, repeat('x', 1000) from generate_series(1, 100)i distributed by (a);
create index ivfao on vfao(b, c);
-- insert many times to populate invisible tuples in pg_aoseg
select junkloop('vfao', 300);
INFO:  GPORCA failed to produce a plan, falling back to planner
INFO:  GPORCA failed to produce a plan, falling back to planner
CONTEXT:  SQL statement "SELECT  $1 "
PL/pgSQL function "junkloop" line 4 at FOR with integer loop variable
INFO:  GPORCA failed to produce a plan, falling back to planner
CONTEXT:  SQL statement "SELECT  $sql$ insert into $sql$ ||  $1  || $sql$ select 1, $sql$ ||  $2 ::text || $sql$, repeat('x', 1000) $sql$"
PL/pgSQL function "junkloop" line 5 at assignment
INFO:  GPORCA failed to produce a plan, falling back to planner
CONTEXT:  SQL statement "SELECT   $1 "
PL/pgSQL function "junkloop" line 6 at EXECUTE statement
INFO:  GPORCA failed to produce a plan, falling back to planner
CONTEXT:  SQL statement "SELECT   $1 "
PL/pgSQL function "junkloop" line 8 at RETURN
 junkloop 
----------
      300
(1 row)

select pg_relation_size((select segrelid from pg_appendonly where relid = 'vfao'::regclass)) from gp_dist_random('gp_id') where gp_segment_id = 0;
INFO:  GPORCA failed to produce a plan, falling back to planner
 pg_relation_size 
------------------
            65536
(1 row)

vacuum full vfao;
select pg_relation_size((select segrelid from pg_appendonly where relid = 'vfao'::regclass)) from gp_dist_random('gp_id') where gp_segment_id = 0;
INFO:  GPORCA failed to produce a plan, falling back to planner
 pg_relation_size 
------------------
            32768
(1 row)

